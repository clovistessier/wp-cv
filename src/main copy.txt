#include <Arduino.h>
#include <ArduinoOSC.h>
#include <MCP3008.h>

#ifndef CE0_PIN
#define CE0_PIN 5
#endif

#ifndef CE1_PIN
#define CE1_PIN 17
#endif

// const char* ssid = "LAN Before Time-2G";
// const char* password = "littlefoot";
const char *ssid = "ESP32 Access Point";
const char *password = "password";

const IPAddress ip(192, 168, 1, 201);
const IPAddress gateway(192, 168, 1, 1);
const IPAddress subnet(255, 255, 255, 0);

const char *host = "192.168.1.202";
const int publish_port = 7000;
const int recv_port = 7001;
const char *args = "/trowacv/ch/1";

void TaskAnalogRead(void *pvParameters);
void TaskOscUpdate(void *pvParameters);

MCP3008 adc1 = MCP3008(CE0_PIN);
uint16_t reading;

void setup()
{
  // put your setup code here, to run once:
  Serial.begin(115200);

  // // WiFi stuff (no timeout setting for WiFi)
  // WiFi.disconnect(true, true); // disable wifi, erase ap info
  // delay(2000);
  // WiFi.mode(WIFI_AP);
  // WiFi.softAP(ssid, password);
  // WiFi.softAPsetHostname(ssid);
  // WiFi.softAPConfig(ip, gateway, subnet);

  // // Serial.print("Connecting to ");
  // // Serial.println(ssid);
  // // WiFi.begin(ssid, password);
  // // WiFi.config(ip, gateway, subnet);

  // // while (WiFi.status() != WL_CONNECTED) {
  // //   delay(500);
  // //   Serial.print(".");
  // // }

  // Serial.println();
  // Serial.println("WiFi connected");
  // Serial.println("IP address: ");
  // //  Serial.println(WiFi.localIP());
  // IPAddress IP = WiFi.softAPIP();
  // Serial.println(IP);

  // adc1.init();

  //OSC
  // OscWiFi.publish(host, publish_port, args, reading);

  // xTaskCreate(
  //     TaskAnalogRead, "TaskAnalogRead", 1024, NULL, 1, NULL);

  // xTaskCreate(
  //     TaskOscUpdate, "TaskOscUpdate", 1024, NULL, 2, NULL);
}

void loop()
{
  // put your main code here, to run repeatedly:
  // vTaskDelete(NULL);
  reading = adc1.readADC(0);
  Serial.println(reading);
}

// void TaskAnalogRead(void *pvParameters)
// {
//   (void)pvParameters;
//   for (;;)
//   {
//     uint16_t reading = adc1.readADC(0);
//     if(reading )
//     Serial.println(reading);
//     vTaskDelay(33 / portTICK_PERIOD_MS); // ~30 fps
//   }
// }

// void TaskOscUpdate(void *pvParamters)
// {
//   (void)pvParamters;
//   for (;;)
//   {
//     OscWiFi.update();
//     vTaskDelay(33 / portTICK_PERIOD_MS);
//   }
// }
